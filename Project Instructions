# JavaScript Project Guidelines

This is a **JavaScript project**. The focus should be on JavaScript, though you may include **HTML** and **CSS** in your project if desired.

---

## ✅ Project Requirements

- Your project **must have interactivity** built into it.
- It should provide some **useful** and **interesting functionality**.
- Functions should **not be hard-coded** — they should be **programmatic**, **dynamic**, and **reusable**.
  - _(If you're unsure how to do this, I can assist you during in-class code reviews.)_

---

## 💡 Project Ideas

### Simulations & Animations
- Simulations
- Animations (preferably with user interaction)
- The essence of calculus

### Games
- Small games
- Text-based adventure games
- Classic arcade games:
  - Pong
  - Invaders
  - Asteroids
  - Space Invaders
  - Shooters

### Applications / Widgets
- Small apps, widgets, or components
- A Chrome extension or browser add-on

### API Integrations
- Integrate with Google Sheets or other APIs  
  _(Note: This is more advanced — we haven’t fully covered `fetch` syntax yet)_

### Automations
- Automate tasks using tools like [airtable.com](https://airtable.com)
- Send out emails
- Generate forms or PDFs from a database

---

## 🎯 Choose a Topic You're Interested In

Pick something **personally meaningful** — consider:
- Math
- Science
- Nature
- Music
- Games
- Hobbies
- Life goals

---

## ⚠️ Notes

- Your project **does not** need to be a large application.  
  _(Larger apps are difficult without a JavaScript framework and not feasible in a short time frame for beginners.)_
  
- You may use **any JavaScript libraries** or **frameworks**.

- ✅ **Highly Recommended**: Use **p5.js** — it simplifies UI and creative coding significantly.

- Avoid spending excessive time on **HTML/CSS**. This project focuses on **JavaScript logic** and interactivity.

---

## 🚫 Avoid This

Do **not** simply follow a basic tutorial (e.g., a calculator). For example:

> ❌ “It’s a calculator, it can do basic math functions.”

This offers **no added value** beyond what JavaScript already does.

---

Make it fun, dynamic, and meaningful. You’ve got this! 💪